services:
  postgresdb:
    image: postgres
    restart: unless-stopped
    env_file: ./.env
    environment:
      - POSTGRES_USER=$POSTGRES_USER
      - POSTGRES_PASSWORD=$POSTGRES_PASSWORD
      - POSTGRES_DB=$POSTGRES_DATABASE
    ports:
      - $POSTGRES_LOCAL_PORT:$POSTGRES_DOCKER_PORT
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U $POSTGRES_USER" ]
      interval: 30s
      timeout: 30s
      retries: 3
  application:
    depends_on:
      - postgresdb
    restart: on-failure
    image: booking-app
    build: .
    env_file: ./.env
    ports:
      - $SPRING_LOCAL_PORT:$SPRING_DOCKER_PORT
      - $DEBUG_PORT:$DEBUG_PORT
    environment:
      SPRING_APPLICATION_JSON: '{
        "spring.application.name" : "booking-app",
        "server.servlet.context-path" : "/api",
        "spring.datasource.url" : "jdbc:postgresql://postgresdb:$POSTGRES_DOCKER_PORT/$POSTGRES_DATABASE",
        "spring.datasource.username" : "$POSTGRES_USER",
        "spring.datasource.password" : "$POSTGRES_PASSWORD",
        "spring.jpa.properties.hibernate.dialect" : "org.hibernate.dialect.PostgreSQLDialect",
        "spring.jpa.hibernate.ddl-auto" : "validate",
        "spring.jpa.open-in-view" : "false",
        "spring.jpa.show-sql" : "true",
        "jwt.expiration" : "$JWT_EXPIRATION",
        "jwt.secret" : "$JWT_SECRET",
        "telegram.bot.token" : "$TELEGRAM_BOT_TOKEN",
        "telegram.bot.username" : "$TELEGRAM_BOT_USERNAME",
        "cron.expression" : "0 0 0 * * *"
      }'
      JAVA_TOOL_OPTIONS: "-agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=*:5005"
